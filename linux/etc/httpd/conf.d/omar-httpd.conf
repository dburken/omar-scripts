ProxyPass         /omar http://localhost:8090/omar
ProxyPassReverse  /omar http://localhost:8090/omar


# turn the rewritting engine on. We assume that
# a LoadModule on mod_rewrite was already done
#
RewriteEngine On


# rewrite http access to the root ip to redirect to the omar application
#
#RewriteRule ^/$ /omar [R]
#RedirectMatch ^/$ /omar

# Test if we are not already accessing via https and if not then reroute the
# login to use https protocol
#
# Comment the next two lines out if your apche is setup to access via https
#RewriteCond %{HTTPS} !^on$
#RewriteRule ^/omar/login/(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R]

#RewriteCond %{HTTPS} ^on$
#RewriteRule !^/omar/login(.*) http://%{HTTP_HOST}%{REQUEST_URI} [R,L]


#RewriteCond %{SERVER_PORT} ^80$
#RewriteRule ^/omar/login(.*) https://%{HTTP_HOST}%{REQUEST_URI} [R,L]


#RewriteCond %{REQUEST_URI} (^|&)(login)(&|$) [NC,OR]
#RewriteRule ^ - [E=IS_HTTP:1]


#all pages that are supposed to be http redirected if https
#RewriteCond %{HTTPS} on
#RewriteCond %{ENV:IS_HTTP} 1
#RewriteRule ^ http://%{HTTP_HOST}%{REQUEST_URI} [R,L=301]

#all other pages are sent to https if not already so
#RewriteCond %{HTTPS} off
#RewriteCond %{ENV:IS_HTTP} !1
#RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [R,L=301]

SetOutputFilter DEFLATE

AddOutputFilterByType DEFLATE text/plain text/html text/xml text/css application/xml application/xhtml+xml application/rss+xml application/javascript application/x-javascript
BrowserMatch \\bMSIE\\s(6) no-gzip 

#DeflateFilterNote deflate_ratio
#LogFormat "%v %h %l %u %t \"%r\" %>s %b mod_deflate: %{deflate_ratio}n pct." vhost_with_deflate_info
#CustomLog logs/deflate_access_log vhost_with_deflate_info



#
# This forced SSL and the OpenLayers does not work through ssl.  Need to figure out how to have http
# in conjunction with https
#
#SSLEngine On
#SSLCertificateFile /etc/httpd/conf/ssl-files/server.crt
#SSLCertificateKeyFile /etc/httpd/conf/ssl-files/server.key
#SetEnvIf User-Agent ".*MSIE.*" nokeepalive ssl-unclean-shutdown
#CustomLog logs/ssl_request_log \
#   "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

#<Directory /var/www/html/tilecache-2.10>
#	AddHandler python-program .py
#	AddHandler cgi-script .cgi
#	Options +ExecCGI
#	PythonHandler TileCache.Service
#	PythonOption TileCacheConfig /var/www/html/tilecache-2.10/tilecache.cfg
#	PythonPath "['/var/www/html/tilecache-2.10']+sys.path"
#</Directory>

